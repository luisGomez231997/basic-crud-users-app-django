"""Django settings for app project. Generated by 'django-admin startproject' using Django 3.2.7."""

"""Imports"""
import os
import pymysql
import cloudinary
from pathlib import Path
from decouple import config, Csv
from pathlib import Path

"""(1) Project Configuration."""
BASE_DIR = Path(__file__).resolve().parent.parent# Build paths inside the project like this: BASE_DIR / 'subdir'.
STATIC_URL = '/static/'# Static files (CSS, JavaScript, Images)
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)# Extra places for collectstatic to find static files.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
cloudinary.config( 
  cloud_name = "luisgr", 
  api_key = "623188336917119", 
  api_secret = "-CTpaWWSE-nmSr8CJ84Wb95ecxI" 
)

"""(2) Api Configuration."""
WSGI_APPLICATION = 'app.wsgi.application'
SECRET_KEY = 'django-insecure-p*#8(h!-f2dba83boo$39^*s*niem(=*9*us5bu1^po^mz68$*'# SECURITY WARNING: keep the secret key used in production secret!
ROOT_URLCONF = 'app.urls'
ALLOWED_HOSTS = ['*']
DEBUG = True

"""(3) Rest Configurations"""
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
#        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
#        'rest_framework.permissions.IsAuthenticated',
     ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ]
}
REST_AUTH_SERIALIZERS = {
    "USER_DETAILS_SERIALIZER": "users.serializers.UserSerializer",
}
REST_AUTH_REGISTER_SERIALIZERS = {
    "REGISTER_SERIALIZER": "users.serializers.RegisterUserSerializer",
}


"""(4) Applications and Dependencies"""
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',    
]
LOCAL_APPS = [
    'users.apps.UsersConfig',
    'oauth.apps.OauthConfig',
]
INSTALLED_APPS = [
    'drf_yasg',
    'cloudinary',
]
INSTALLED_APPS = DJANGO_APPS + INSTALLED_APPS + LOCAL_APPS 

"""(5) Applications and Middlewares"""
DJANGO_MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
INSTALLED_MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]
MIDDLEWARE = INSTALLED_MIDDLEWARE + DJANGO_MIDDLEWARE

"""(6) OAuth Model"""
AUTH_USER_MODEL = 'users.CustomUser'
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_USERNAME_REQUIRED = False
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

"""(7) Templates configuration"""
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

"""(8) Databases and ORM"""
pymysql.install_as_MySQLdb()
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'postgresql': {},
    'mysql': {}
}
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


"""(9) Internationalization"""
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True